# file: 2_load.yml
---

- name: Wait for AWS AMIs to become initialized
  hosts: localhost
  gather_facts: no
  tags:
    - wait
  tasks:
    - wait_for:
        host: "{{ item }}"
        port: 22
        state: started
        timeout: 300
      with_items:
        - "{{ groups.rhel_nodes }}"

- name: Subscribe system
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  tags:
    - rhsm
  gather_facts: yes
  roles:
    - role: subscription_manager 

- name: Configure epel on nodes
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  tags:
    - epel
  roles:
    - role: epel

- name: Issue SSL certs
  become: false
  hosts: localhost
  vars:
    command:      "issue"
#    command:      "revoke"
    email:        "{{ letsencrypt_email }}"
    cert_dir:     "{{ deploy_working_dir }}"
    cert_fqdns:
      - "*.{{ workshop_prefix }}.{{ domain_name }}"
  tags:
    - acme
  roles:
    - role: acme

- name: Configure software on nodes
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  gather_facts: no
  tags:
    - software
  roles:
    - role: ansible.tower
    - role: vscode
      when: graphical|bool
    - role: graphical
      when: graphical|bool
    - role: firewalld
      when: not graphical|bool
    - role: system-user
  tasks:
    - name: install container management tools
      yum:
        name:
        - buildah
        - podman
        - skopeo
        state: present
    - name: install session recording tools
      yum:
        name:
        - tlog
        - cockpit-session-recording
        - systemd-journal-remote
        state: present
    - name: install bash-completion (RHEL 8)
      yum:
        name:
        - bash-completion
        state: present
      when: rhel_ver == 'rhel8'
      tags:
        - bash-completion

- name: Configure web console (RHEL 7)
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  gather_facts: no
  tags:
    - wetty
  roles:
    - role: wetty
      when: rhel_ver == 'rhel7'

- name: Configure web console (RHEL 8)
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  gather_facts: no
  tags:
    - webconsole
  roles:
    - role: cockpit
      when: rhel_ver == 'rhel8'

- name: Upgrade packages
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  tags:
    - upgrade
  roles:
    - role: upgrade

- name: Re-enable SCL repo when upgrade disables it
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  gather_facts: yes
  tags:
    - upgrade
  roles:
    - role: subscription_manager 

- name: Custom installations
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  gather_facts: yes
  tags:
    - custom
  tasks:
    - name: search for httpd versions
      yum:
        list: httpd
      register: result

    - set_fact:
        httpd_packages: "{{ httpd_packages|default([]) }} + [ '{{ item.name + '-' + item.version + '-' + item.release + '.' + item.arch }}']"
      with_items:
      - "{{ result.results }}"

    - name: install oldest available version of httpd
      yum:
        name: "{{ httpd_packages | sort_versions | first }}"
        state: present

    - name: create ssh key for ec2-user
      openssh_keypair:
        path: /home/ec2-user/.ssh/id_rsa
        owner: ec2-user
        group: ec2-user
        mode: 0600
        state: present
      register: sshkey

    - name: add key to authorized_key
      authorized_key:
        user: ec2-user
        key: "{{ sshkey.public_key }}"
        state: present

    - name: Add host key to known_hosts
      shell: ssh-keyscan -t ecdsa localhost > /home/ec2-user/.ssh/known_hosts
      args:
        creates: /home/ec2-user/.ssh/known_hosts

    - name: install real certificate to web console
      copy:
        dest: "/etc/cockpit/ws-certs.d/acme.cert"
        content: "{{ lookup('file', deploy_working_dir + '/cert.pem') }}\n{{ lookup('file', deploy_working_dir + '/key.pem') }}"
        owner: "root"
        group: "cockpit-ws"

    - name: restart web console
      systemd:
        name: "cockpit"
        state: restarted

- name: Pre-load system role playbook
  become: no
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  gather_facts: yes
  tags:
    - custom
  tasks:
    - name: install system role network playbook
      copy:
        dest: "/home/ec2-user/example-network-playbook.yml"
        src: "example-network-playbook.yml"
        mode: 0644

- name: Check to make sure that the web console is listening
  become: no
  hosts:
    - rhel_nodes
  gather_facts: no
  tasks:
    - uri:
        url: "https://{{ inventory_hostname }}:9090/system"
        url_username: "{{ system_user }}"
        url_password: "{{ workshop_password }}"
        validate_certs: no
      delegate_to: localhost

...
