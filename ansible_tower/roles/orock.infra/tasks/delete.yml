---
# - name: Delete Tower servers
#   os_server:
#     state: "absent"
#     name: "{{ workshop_prefix }}-tower-{{ item.name }}"
#     image: "RHEL 7.5 (RHN) [BYOL]"
#     key_name: "{{ workshop_prefix }}-student-key"
#     flavor: "t1.medium"
#     network: "{{ workshop_prefix }}-student-network"
#     floating_ip_pools: external-floating-ips
#     timeout: 200
#     security_groups:
#       - default
#       - "{{ workshop_prefix }}-student-fw"
#   with_items: "{{ tower_server_defaults }}"
#   register: tower_nodes
#   tags: delete


- route53_facts:
    profile: redhatgov
    query: record_sets
    hosted_zone_id: "{{ zone_id }}"
  register: rec

# - name: get dns
#   route53:
#     state: get
#     zone: "{{ domain_name }}"
#     record: "{{ workshop_prefix }}.tower.0.{{ domain_name }}"
#     type: A
#   register: rec

# - debug:
#     var: rec
#   ignore_errors: true

# - set_fact: 
#      dns_array: "{{ item }}"
#   loop: "{{ rec | json_query('ResourceRecordSets[*].Name') }}"

# - debug:
#     var: dns_array
#   ignore_errors: true

# AWS Route53 DNS: TOWER NODE
- name: Delete DNS names for Tower Nodes
  route53: 
    state: absent
    zone:   "{{ domain_name }}"
    record: "{{ workshop_prefix }}.tower.{{ item[0] }}.{{ domain_name }}" #example.tower.0.redhatgov.io
    type: A
    ttl: 300
    value:  "{{ item[1].ResourceRecords[0] }}"
  with_indexed_items: "{{ rec.ResourceRecordSets }}"
  tags: delete

# - name: Delete Ansible-managed instance
#   os_server:
#     state: absent
#     name: "{{ workshop_prefix }}-managed-node-{{ item.name }}"
#     image: "RHEL 7.5 (RHN) [BYOL]"
#     key_name: "{{ workshop_prefix }}-student-key"
#     flavor: "t1.medium"
#     network: "{{ workshop_prefix }}-student-network"
#     floating_ip_pools: external-floating-ips
#     timeout: 200
#     security_groups:
#       - default
#       - "{{ workshop_prefix }}-student-fw"
#   with_items: "{{ tower_node_defaults }}"
#   register: managed_nodes
#   tags: delete

# # # AWS Route53 DNS: MANAGED NODE
# - name: Delete DNS names for Managed Nodes
#   route53: 
#     status: absent
#     zone:   "{{ domain_name }}"
#     record: "{{ workshop_prefix }}.node.{{ item[0] }}.{{ domain_name }}" #example.tower.0.redhatgov.io
#     type: A
#     ttl: 300
#     value:  "{{ item[1].openstack.accessIPv4 }}"
#     overwrite: yes
#     wait: yes
#   with_indexed_items: "{{ managed_nodes.results }}"